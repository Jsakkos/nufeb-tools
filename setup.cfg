# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = nufeb_tools
#version= attr: nufeb_tools.__version__
description = Python-based tools and utilities for NUFEB simulations
author = Jonathan Sakkos
author_email = sakkosjo@msu.edu
license = MIT
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/Jsakkos/nufeb-tools
# Add here related links, for example:
project_urls =
    Documentation = https://nufeb-tools.readthedocs.io/en/latest/
    Source = https://github.com/Jsakkos/nufeb_tools/nufeb_tools
#    Changelog = https://pyscaffold.org/en/latest/changelog.html
    Tracker = https://github.com/Jsakkos/nufeb-tools/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
    Download = https://pypi.org/project/nufeb-tools/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 3 - Alpha
    Programming Language :: Python
    Intended Audience :: Science/Research
    Operating System :: OS Independent
    Topic :: Scientific/Engineering

[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
# python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"
    numpy
    scikit-image
    pandas
    matplotlib
    datafed
    opencv-python
    h5py
    seaborn
    tqdm
    scipy
    
[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install nufeb_tools[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov
    sys
[options.entry_points]
# Add here console scripts like:
console_scripts =
    nufeb-seed = nufeb_tools.generate_atom:run
    nufeb-clean = nufeb_tools.generate_atom:clean
    dev-seed = nufeb_tools.generate_atom_dev:run
    dev-clean = nufeb_tools.generate_atom_dev:clean


[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this py.test issue.
addopts =
    --cov nufeb_tools --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.0.2
package = nufeb_tools
extensions = 

filterwarnings =
    ignore:Call to deprecated create function FieldDescriptor
    ignore:Call to deprecated create function Descriptor
    ignore:Call to deprecated create function EnumDescriptor
    ignore:Call to deprecated create function EnumValueDescriptor
    ignore:Call to deprecated create function FileDescriptor
    ignore:Call to deprecated create function OneofDescriptor